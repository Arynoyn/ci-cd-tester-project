name: CD - Release to Microsoft Store
on:
  release:
    types: [published]

jobs:
  dummy-job:
    name: Dummy Job
    runs-on: windows-latest
    steps:
      - name: Print Dummy Message
        run: echo 'No Jobs Active'
# releaseToMicrosoftStore:
#   name: Release to the Microsoft Store
#   runs-on: windows-latest
#   needs: buildWithWindows
#   if: github.event.action == 'published' || (contains(github.event.inputs.mode, 'release') && contains(github.event.inputs.mode, 'windows'))
#   env:
#     Wap_Project_Directory: build\WSAPlayer\Card Game Simulator
#     SigningCertificate: Card Game Simulator_StoreKey.pfx
#   steps:
#     - name: Checkout Repository
#       uses: actions/checkout@v2
#     - name: Download WSAPlayer Artifact
#       uses: actions/download-artifact@v2
#       with:
#         name: cgs-WSAPlayer
#         path: build/WSAPlayer
#     - name: Setup Unity IL2CPP
#       uses: kuler90/setup-unity@v1
#       with:
#         unity-modules: windows-il2cpp
#     - name: Setup Unity UWP
#       uses: kuler90/setup-unity@v1
#       with:
#         unity-modules: universal-windows-platform
#     - uses: ilammy/msvc-dev-cmd@v1
#     - name: Setup MSBuild
#       uses: microsoft/setup-msbuild@v1
#     - name: Restore the Wpf application to populate the obj folder
#       run: msbuild $env:SolutionPath /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
#       env:
#         SolutionPath: build\WSAPlayer\Card Game Simulator.sln
#         Configuration: Master
#         RuntimeIdentifier: win-x64
#     - name: Decode the Pfx
#       run: |
#         $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.MICROSOFT_STORE_PFX_FILE }}")
#         $currentDirectory = Get-Location
#         $certificatePath = Join-Path -Path $currentDirectory -ChildPath $env:Wap_Project_Directory -AdditionalChildPath $env:SigningCertificate
#         [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
#     - name: Build the .appxupload
#       run: msbuild $env:SolutionPath /p:Configuration=$env:Configuration /p:Platform=$env:TargetPlatform /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle
#       env:
#         SolutionPath: build\WSAPlayer\Card Game Simulator.sln
#         Configuration: Master
#         TargetPlatform: x64
#         BuildMode: StoreUpload
#         AppxBundle: Always
#     - name: Remove the .pfx
#       run: Remove-Item -path $env:Wap_Project_Directory\$env:SigningCertificate
#     - name: Upload the .appxupload
#       uses: actions/upload-artifact@v2
#       with:
#         name: cgs.appxupload
#         path: build/WSAPlayer/AppPackages/Card Game Simulator/*.appxupload
# TODO: https://github.com/microsoft/StoreBroker#readme