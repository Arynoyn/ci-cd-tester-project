name: CI - Build All Platforms
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ publish ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  runUnitTests:
    name: Run Unit Tests for ${{ matrix.unityVersion }} ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        unityVersion: 
          - 2020.3.0f1
        testMode:
          - playmode
          - editmode
    steps:
      # Checkout
      - uses: actions/checkout@v2
      
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      #Run Tests
      - uses: game-ci/unity-test-runner@v2
        id: tests
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          artifactsPath: ${{ matrix.unityVersion }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.unityVersion }} Test Results
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results for ${{ matrix.unityVersion }}
          path: ${{ steps.tests.outputs.artifactsPath }}
  buildForAllPlatforms:
    needs: runUnitTests
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    runs-on: ubuntu-latest
    strategy: 
      fail-fast: false
      matrix:
        unityVersion: 
          - 2020.3.0f1
        targetPlatform:
          # - Android # Build an Android apk standalone app
          # - iOS # Build an iOS Player
          - StandaloneOSX # build a MacOS Standalone (Intel 64-bit)
          # - StandaloneWindows # build a WIndows Standalone
          - StandaloneWindows64 # build a Windows 64-bit Standalone
          # - StandaloneLinux64 # build a Linux 64-bit Standalone 
          - WebGL # WebGL        
    steps:
      # Checkout
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
          lfs: true
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-
      # Build
      - uses: game-ci/unity-builder@v2
        id: buildStep
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Semantic
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}.${{ steps.myBuildStep.outputs.buildVersion }}
          path: build/${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}.${{ steps.myBuildStep.outputs.buildVersion }}
  
